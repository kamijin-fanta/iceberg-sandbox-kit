services:
  trino:
    image: trinodb/trino:427
    volumes:
      - ./conf/trino/:/etc/trino/
      - trino-data:/data/trino/
    ports:
      - 8080:8080
    restart: unless-stopped
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}

  rest:
    # Fix to add MySQL driver to original image
    # image: apache/iceberg-rest-fixture:1.8.1
    build:
      context: ./rest-catalog/
      dockerfile: Dockerfile
    ports:
      - 8181:8181
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=us-east-1
      - HTTP_PROXY=http://mitmproxy:8080
      # has prefix "CATALOG_" variable convert rules
      # impl: https://github.com/tabular-io/iceberg-rest-image/blob/master/src/main/java/org/apache/iceberg/rest/RESTCatalogServer.java
      # 1. remove prefix "CATALOG_"
      # 2. replace "__" to "-"
      # 3. replace "_" to "."
      # 4. convert to lower case
      - CATALOG_WAREHOUSE=s3://bucket/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_PATH__STYLE__ACCESS=true
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_CATALOG__IMPL=org.apache.iceberg.jdbc.JdbcCatalog
      - CATALOG_URI=jdbc:mysql://mysql:3306/${REST_CATALOG_DB_NAME}
      - CATALOG_JDBC_USER=root
      - CATALOG_JDBC_PASSWORD=${REST_CATALOG_DB_PASSWORD}

  mysql:
    image: mysql:9.2
    restart: unless-stopped
    volumes:
      - rest-mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${REST_CATALOG_DB_PASSWORD}
      MYSQL_DATABASE: ${REST_CATALOG_DB_NAME}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping --silent -h 127.0.0.1 -uroot -p$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 1s
      timeout: 3s
      retries: 30

  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    ports:
      - 9000:9000
      - 9090:9090
    restart: unless-stopped
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
      MINIO_CONSOLE_ADDRESS: ":9090"
    entrypoint: sh
    command: -c 'mkdir -p /data/bucket && minio server /data'

  mitmproxy:
    image: mitmproxy/mitmproxy:11.1.3
    ports:
      - 8081:8081
    volumes:
      - ./mitmproxy:/home/mitmproxy/.mitmproxy
    command: mitmweb --web-host 0.0.0.0

  debug:
    # minio storage is mounted and tools such as avro cli, pqrs(parquet read cli), and jq are installed.
    build:
      context: ./debug/
    restart: unless-stopped
    hostname: debug
    stop_grace_period: 1s
    depends_on:
      - minio
    security_opt:
      - apparmor=unconfined
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      - AWS_S3_URL=http://minio:9000
      - AWS_S3_BUCKET=bucket
      - AWS_S3_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_S3_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

volumes:
  trino-data: {}
  rest-mysql-data: {}
  minio-data: {}
